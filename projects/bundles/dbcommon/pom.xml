<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
	<groupId>org.identityconnectors</groupId>
	<artifactId>connectors-parent</artifactId>
	<version>1.0-SNAPSHOT</version>
  </parent>
  <name>DB common library connector</name>	
  <artifactId>${project.groupId}.dbcommon</artifactId>
  <version>1.0-SNAPSHOT</version>	

  <properties>
	<framework.version>1.1.0-SNAPSHOT</framework.version>
  </properties>

  <build>
    <!-- Here we again mix sources and tests -->
    <sourceDirectory>${project.basedir}/src</sourceDirectory>
    <testSourceDirectory>${project.basedir}/src</testSourceDirectory>

    <resources>
	  <resource>
		<directory>src</directory>
		<excludes><exclude>**/*.java</exclude></excludes>
	  </resource>
    </resources>


    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <includes>
		<include>**/*Test.java</include>
		<include>**/*Tests.java</include>
	  </includes>
        </configuration>
      </plugin>

      <!-- Because we mix main classes and tests, we need to config compiler plugin to not compile all classes twice -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
		<configuration>
			<excludes>
				<exclude>**/*Test.java</exclude>
				<exclude>**/*Tests.java</exclude>
			</excludes>
			<testIncludes>
				<include>**/*Test.java</include>
				<include>**/*Tests.java</include>
			</testIncludes>
		</configuration>
      </plugin>
      		
    </plugins>

  </build>

  <dependencies>
	<dependency>
		<groupId>${framework.groupId}</groupId>
		<artifactId>${framework.artifactId}</artifactId>
		<version>${framework.version}</version>
	</dependency>
	<dependency>
		<groupId>junit</groupId>
		<artifactId>junit</artifactId>
		<scope>test</scope>
	</dependency>
	<dependency>
		<groupId>${framework.groupId}</groupId>
		<artifactId>connector-framework-internal</artifactId>
		<version>${framework.version}</version>
		<scope>test</scope>
	</dependency>

  </dependencies>


</project>

